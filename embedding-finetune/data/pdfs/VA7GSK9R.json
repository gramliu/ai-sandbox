{
  "key": "VA7GSK9R",
  "url": "http://arxiv.org/pdf/2405.09818v1",
  "metadata": {
    "title": "Chameleon: Mixed-Modal Early-Fusion Foundation Models",
    "abstract": "  We present Chameleon, a family of early-fusion token-based mixed-modal models\ncapable of understanding and generating images and text in any arbitrary\nsequence. We outline a stable training approach from inception, an alignment\nrecipe, and an architectural parameterization tailored for the early-fusion,\ntoken-based, mixed-modal setting. The models are evaluated on a comprehensive\nrange of tasks, including visual question answering, image captioning, text\ngeneration, image generation, and long-form mixed modal generation. Chameleon\ndemonstrates broad and general capabilities, including state-of-the-art\nperformance in image captioning tasks, outperforms Llama-2 in text-only tasks\nwhile being competitive with models such as Mixtral 8x7B and Gemini-Pro, and\nperforms non-trivial image generation, all in a single model. It also matches\nor exceeds the performance of much larger models, including Gemini Pro and\nGPT-4V, according to human judgments on a new long-form mixed-modal generation\nevaluation, where either the prompt or outputs contain mixed sequences of both\nimages and text. Chameleon marks a significant step forward in a unified\nmodeling of full multimodal documents.\n",
    "published": "2024-05-16T05:23:41Z"
  },
  "text": [
    "Chameleon: Mixed-Modal Early-Fusion Foundation\nModels\nChameleon Team\n1,∗\n1\nFAIR at Meta\n∗\nSee Contributions section for full author list.\nWe present Chameleon, a family of early-fusion token-based mixed-modal models capable of under-\nstanding and generating images and text in any arbitrary sequence. We outline a stable training\napproach from inception, an alignment recipe, and an architectural parameterization tailored for the\nearly-fusion, token-based, mixed-modal setting. The models are evaluated on a comprehensive range\nof tasks, including visual question answering, image captioning, text generation, image generation, and\nlong-form mixed modal generation. Chameleon demonstrates broad and general capabilities, including\nstate-of-the-art performance in image captioning tasks, outperforms Llama-2 in text-only tasks while\nbeing competitive with models such as Mixtral 8x7B and Gemini-Pro, and performs non-trivial image\ngeneration, all in a single model. It also matches or exceeds the performance of much larger models,\nincluding Gemini Pro and GPT-4V, according to human judgments on a new long-form mixed-modal\ngeneration evaluation, where either the prompt or outputs contain mixed sequences of both images and\ntext. Chameleon marks a significant step forward in a unified modeling of full multimodal documents.\nDate:May 17, 2024\n1  Introduction\nRecent multimodal foundation models are very widely adopted but still model different modalities separately,\noften using modality specific encoders or decoders. This can limit their ability to integrate information across\nmodalities and generate multimodal documents that can contain arbitrary sequences of images and text. In\nthis paper, we presentChameleon, a family of mixed-modal foundation models capable of generating and\nreasoning with mixed sequences of arbitrarily interleaved textual and image content (Figures 2-4). This\nallows for full multimodal document modeling, which is a direct generalization of standard multimodal tasks\nsuch as image generation, understanding and reasoning over images, and text-only LLMs.Chameleonis\ninstead designed to be mixed-model from inception and uses a uniform architecture trained from scratch in an\nend-to-end fashion on an interleaved mixture of all modalities, i.e., images, text, and code.\nOur unified approach uses fully token-based representations for both image and textual modalities (Figure 1).\nBy quantizing images into discrete tokens, analogous to words in text, we can apply the same transformer\narchitecture to sequences of both image and text tokens, without the need for separate image/text encoders\n(Alayrac et al., 2022; Liu et al., 2023b; Laurençon et al., 2023) or domain-specific decoders (Ramesh et al.,\n2022; Jin et al., 2023; Betker et al., 2023). This early-fusion approach, where all modalities are projected into\na shared representational space from the start, allows for seamless reasoning and generation across modalities.\nHowever, it also presents significant technical challenges, particularly in terms of optimization stability and\nscaling.\nWe address these challenges through a combination of architectural innovations and training techniques. We\nintroduce novel modifications to the transformer architecture, such as query-key normalization and revised\nplacement of layer norms, which we find to be crucial for stable training in the mixed-modal setting (Section\n2.3). We further show how to adapt the supervised finetuning approaches used for text-only LLMs to the\nmixed-modal setting, enabling strong alignment at scale (Section 3). Using these techniques, we successfully\ntrainChameleon-34Bon 5x the number of tokens as Llama-2 – enabling new mixed-modal applications while\nstill matching or even outperforming existing LLMs on unimodal benchmarks.\n1\narXiv:2405.09818v1  [cs.CL]  16 May 2024",
    "Mixed-Modal Auto-Regressive LM\nTEXT PROMPT\n“What can I bake \nwith this?”\nTEXT OUTPUT\n“Here is a recipe for \nbanana bread.”\nImage Tokenizer\nImage De-Tokenizer\nIMAGE PROMPT\nIMAGE OUTPUT\nStart\nImage\nStart\nImage\nEnd\nImage\nEnd\nImage\nStart\nImage\nStart\nImage\nEnd\nImage\nMixed Modal Auto-Regressive LM\n(a) Mixed-Modal Pre-Training(b) Mixed-Modal Generation\nFigure 1Chameleonrepresents all modalities — images, text, and code, as discrete tokens and uses a uniform\ntransformer-based architecture that is trained from scratch in an end-to-end fashion on∼10T tokens of interleaved\nmixed-modal data. As a result,Chameleoncan both reason over, as well as generate, arbitrary mixed-modal documents.\nText tokens are represented in green and image tokens are represented in blue.\nExtensive evaluations demonstrate thatChameleonis a broadly capable model on a diverse set of tasks.\nOn visual question answering and image captioning benchmarks,Chameleon-34Bachieves state-of-the-art\nperformance, outperforming models like Flamingo, IDEFICS and Llava-1.5 (Section 5.2). At the same time,\nit maintains competitive performance on text-only benchmarks, matching models like Mixtral 8x7B and\nGemini-Pro on commonsense reasoning and reading comprehension tasks (Section 5.1). But perhaps most\nimpressively,Chameleonunlocks entirely new capabilities in terms of mixed-modal reasoning and generation.\nAs using only static, public benchmarks to evaluate model performance could be limited (Schaeffer, 2023), we\nalso conduct a carefully designed human evaluation experiment by measuring the quality of mixed-modal\nlong form responses to open-ended prompts.Chameleon-34Bsubstantially outperforms strong baselines like\nGemini-Pro and GPT-4V (Section 4), achieving a 60.4% preference rate against Gemini-Pro and a 51.6%\npreference rate against GPT-4V in pairwise comparisons.\nIn summary, we present the following contributions:\n•We presentChameleon, a family of early-fusion token-based mixed-modal models capable of reasoning\nover and generating interleaved image-text documents, setting a new bar for open multimodal foundation\nmodels.\n•We introduce architectural innovations and training techniques that enable the stable and scalable\ntraining of early-fusion token-based models, addressing key challenges in mixed-modal learning.\n•Through extensive evaluations, we demonstrate state-of-the-art performance across a diverse set of\nvision-language benchmarks, while maintaining competitive performance on text-only tasks, and high\nquality image generation, all in the same model.\n•We conduct the first large-scale human evaluation on open-ended mixed-modal reasoning and generation,\ndemonstrating the unique capabilities ofChameleonin this new setting.\nChameleonrepresents a significant step towards realizing the vision of unified foundation models capable of\nflexibly reasoning over and generating multimodal content.\n2",
    "Prompt:I’m bored. Could you show me some cool, quirky-looking birds? Also tell me about them in 2–3\nsentences.\nResponse:Absolutely! Here are three birds with some unique features that\nyou might find interesting:\nKeel-Billed ToucanThe Keel-Billed Toucan is a brightly colored bird\nnative to South American rainforests and woodlands. Its most distinctive\nfeature is its colorful beak, which can grow up to seven inches long and has a\ndistinctive, curved shape. The beak is used for plucking fruit from trees and\nfor social displays. Despite its large size, the Keel-Billed Toucan is a skilled\nflyer and can often be seen flitting through the treetops. Here is an image of\nthis vibrant bird:<img>\nPuffinPuffins are small, aquatic birds that are found in the northern hemisphere.\nThey have distinctive black and white feathers, as well as a brightly colored\nbeak that is used for attracting mates and defending their territory. Puffins\nare known for their distinctive \"puffin\" call, which sounds like a loud, guttural\nchuckle. They feed on fish, which they catch by diving into the water from the\nair. Puffins are colonial birds, and they breed in large colonies on rocky cliffs\nand islands. Here is an image of this adorable bird:<img>\nGolden PheasantThe Golden Pheasant is a brightly colored bird native to the\nforests of China. It is a member of the pheasant family and is known for its\nstriking plumage, which features a golden-yellow body, red face, and green tail\nfeathers. The Golden Pheasant is a ground-dwelling bird, and it feeds on a diet\nof insects, seeds, and fruits. It is a popular game bird, and is often hunted for\nits meat and feathers. In captivity, the Golden Pheasant is sometimes kept as\nan ornamental bird, due to its striking appearance. Here is an image of this\nbeautiful bird:<img>\nI hope these images and descriptions have helped to brighten your day! If you have any other questions\nor requests, please don’t hesitate to ask.\nFigure 2Sample interleaved image and text generation from Chameleon. The corresponding images are generated in\nlocations marked by<img>.\n3",
    "2  Pre-Training\nChameleonrepresents images, in addition to text, as a series of discrete tokens and takes advantage of the\nscaling properties of auto-regressive Transformers (Ramesh et al., 2021; Aghajanyan et al., 2022, 2023; Yu\net al., 2023). We present any ordering of images and text during training ranging from text-only, to single\ntext/image pairs to full interleaved text-image documents.\nPrompt: <img>While chameleons are masters of camouflage in the natural\nworld, let’s see how they might fare in a man-made setting.\n1. Analyze the colors, patterns, and textures in this image and identify the\nmost challenging spot for a chameleon to blend in.\n2.  Then generate an image of a chameleon with the optimal pattern to\ncamouflage itself.\n3. Then, rate and explain how successful each attempt is on a scale from 1-10.\nResponse:The image is of a stop sign in a forested area, with some sunlight filtering through the trees.\nThe sign has a red octagonal shape with a white border and the word \"STOP\" written in white letters.\nIn the background, there are green leaves and trees.\nChallenging Spot for a Chameleon:The stop sign would be the most challenging spot for a chameleon\nto blend in due to its bright red color and bold white letters, which would stand out in the forested\nenvironment.\nOptimal Pattern for Camouflage:To camouflage itself on the stop sign, a chameleon would need\nto have a pattern that would break up its outline and make it less conspicuous. A pattern with shades\nof brown and red would help the chameleon blend in more effectively.\nAdditionally, a mottled or dappled pattern would help to scatter\nlight and further reduce the chameleon’s visibility.\n<img>\nRating and Explanation:  A rating of 2/10 would be given for\nthe chameleon’s ability to blend in on the stop sign.  While the\nchameleon’s green and brown pattern helps to break up its outline,\nthe bright red color of the stop sign will still make it stand out in\nthe forested environment.\nFigure 3Sample generation from Chameleon.\n2.1  Tokenization\nImage TokenizationWe train a new image tokenizer based on Gafni et al. (2022), which encodes a512×512\nimage into1024discrete tokens from a codebook of size8192. For training this tokenizer, we use only licensed\nimages. Given the importance of generating human faces, we up-sample the percentage of images with faces\nduring pre-training by 2 times. A core weakness of our tokenizer is in reconstructing images with a large\namount of text, therefore upper bounding the capability of our models, when it comes to heavy OCR-related\ntasks.\nTokenizerWe train a new BPE tokenizer (Sennrich et al., 2016) over a subset of the training data outlined\nbelow with a vocabulary size of 65,536, which includes the 8192 image codebook tokens, using thesentencepiece\nlibrary (Kudo and Richardson, 2018).\n4",
    "Prompt:What can I bake with this? Give me the full recipe and show me an\nimage with the final dish.<img>\nResponse:Bananas are a versatile fruit that can be used in various baked\ngoods, such as muffins, bread, cakes, and cookies. They add natural sweetness,\nmoisture, and a subtle banana flavor to the finished product. Additionally,\nbananas are rich in potassium, fiber, and other nutrients, making them a\nhealthy addition to your baking repertoire.\nHere is a simple recipe for banana bread that uses 3 ripe bananas:\nIngredients:\n•3 ripe bananas, mashed\n•1 1/2 cups all-purpose flour\n•1 tsp baking powder\n•1/2 tsp baking soda\n•1/2 tsp salt\n•1/4 cup unsalted butter, softened\n•1 cup granulated sugar\n•2 large eggs\n•1 tsp vanilla extract\n•1/2 cup chopped walnuts (optional)\nInstructions:\n•Preheat your oven to 350°F (180°C). Grease a 9x5-inch loaf pan and set it aside.\n•In a medium bowl, whisk together the flour, baking powder, baking soda, and salt. Set aside.\n•\nIn a large mixing bowl, use an electric mixer to cream together the butter and sugar until light and\nfluffy, about 2-3 minutes.\n•Beat in the eggs one at a time, followed by the mashed bananas and vanilla extract.\n•Gradually mix in the dry ingredients until just combined, being careful\nnot to overmix.\n•If using walnuts, fold them into the batter.\n•Pour the batter into the prepared loaf pan and smooth the top.\n•Bake for 50-60 minutes, or until a toothpick inserted into the center of\nthe bread comes out clean.\n•Remove the bread from the oven and let it cool in the pan for 10 minutes\nbefore transferring it to a wire rack to cool completely.<img>\nFigure 4SampleChameleonoutputs.\n2.2  Pre-Training Data\nWe delineate the pre-training stage into two separate stages. The first stage takes up the first 80% of training\nwhile the second stage takes the last 20%. For allText-To-Imagepairs we rotate so that 50% of the time the\nimage comes before the text (i.e., captioning).\n2.2.1  First Stage\nIn the first stage we use a data mixture consisting of the following very large scale completely unsupervised\ndatasets.\nText-Only:We use a variety of textual datasets, including a combination of the pre-training data used to\ntrain LLaMa-2 (Touvron et al., 2023) and CodeLLaMa (Roziere et al., 2023) for a total of2.9 trilliontext-only\ntokens.\n5",
    "0k5k10k15k20k25k30k\nStep\n0.0\n5.0\n10.0\n15.0\n20.0\n25.0\n30.0\n35.0\nOutput Norm\nw/ QK-norm and dropout\nw/o dropout\nw/o QK-norm or dropout\n(a)Uncontrolled growth of output\nnorms is a strong indicator of future\ntraining divergence.\n0k25k50k75k100k125k150k175k\nStep\n3.4\n3.5\n3.5\n3.6\n3.6\n3.7\n3.7\nTraining Loss\nw/o QK-norm\nw/ QK-norm\n(b)An ablation withChameleon-7B\nwith and withoutQK-Norm.\n0k20k40k60k80k\nStep\n3.4\n3.5\n3.6\n3.7\n3.8\n3.9\nTraining Loss\nw/o dropout\nw/ dropout\n(c)An ablation withChameleon-7B\nwith and withoutdropout.\nFigure 5Output norm and training loss curves forChameleonmodels under various settings.\nText-Image:The text-image data for pre-training is a combination of publicly available data sources and\nlicensed data. The images are then resized and center cropped into512×512images for tokenization. In\ntotal, we include 1.4 billion text-image pairs, which produces1.5 trilliontext-image tokens.\nText/Image Interleaved:We procure data from publicly available web sources, not including data from Meta’s\nproducts or services, for a total of400 billiontokens of interleaved text and image data similar to Laurençon\net al. (2023). We apply the same filtering for images, as was applied inText-To-Image.\n2.2.2  Second Stage\nIn the second stage, we lower the weight of the first stage data by 50% and mix in higher quality datasets\nwhile maintaining a similar proportion of image text tokens.\nWe additionally include a filtered subset of the train sets from a large collection of instruction tuning sets.\n2.3  Stability\nIt was challenging to maintain stable training when scaling theChameleonmodels above 8B parameters\nand 1T tokens, with instabilities often only arising very late in training. We adopted to following recipe for\narchitecture and optimization to achieve stability.\nArchitectureOur architecture largely follows LLaMa-2 (Touvron et al., 2023). For normalization, we continue\nto use RMSNorm (Zhang and Sennrich, 2019); we use the SwiGLU (Shazeer, 2020) activation function and\nrotary positional embeddings (RoPE) (Su et al., 2021).\nWe found that the standard LLaMa architecture showed complex divergences due to slow norm growth in the\nmid-to-late stages of training. We narrowed down the cause of the divergence to the softmax operation being\nproblematic when training with multiple modalities of significantly varying entropy due to the translation\ninvariant property of softmax (i.e.,softmax(z) =softmax(z+c)). Because we share all weights of the model\nacross modalities, each modality will try to “compete” with the other by increasing its norms slightly; while\nnot problematic at the beginning of training, it manifests in divergences once we get outside the effective\nrepresentation range of bf16 (In Figure 6b, we show that ablations without image generation did not diverge).\nIn a unimodal setting, this problem has also been named the logit drift problem (Wortsman et al., 2023). In\nFigure 5a, we plot the norms of the output of the last transformer layer as training progresses and we find\nthat although training divergences can manifest after as much as even 20-30% of training progress, monitoring\nuncontrolled growth of output norms is strongly correlated with predicting future loss divergence.\nThe softmax operation appears in two places in transformers: the core attention mechanism and the softmax\nover the logits. As inspired by Dehghani et al. (2023) and Wortsman et al. (2023), we first deviate from\nthe Llama architecture by using query-key normalization (QK-Norm). QK-Norm directly controls the norm\ngrowth of input to the softmax by applying layer norm to the query and key vectors within the attention.\n6",
    "0k100k200k300k400k500k600k\nStep\n2.8\n2.9\n3.0\n3.1\n3.2\nTraining Loss\n7b\n34b\n(a)Training Curves for 600k steps for\nChameleon-7BandChameleon-34B\nover Mixed-Modal Data.\n0k50k100k150k200k250k\nStep\n0.95\n1.00\n1.05\n1.10\n1.15\nTraining Loss\n7B w/o image generation\n(b)Training loss curve with image gen-\neration disabled does not suffer from\ninstability issues.\n0k2k4k6k8k10k\nStep\n3.5\n4.0\n4.5\n5.0\n5.5\n6.0\nTraining Loss\nw/o norm reordering\nw/ norm reordering\n(c)ForChameleon-34B,  using\ndropoutdoes not fix divergences,\nboth  with  and  without  norm-\nreordering.\nFigure 6Training loss curves forChameleonmodels under various settings.\nIn Figure 5b, we show training loss curves forChameleon-7Bwith and without QK-Norm, and the latter\ndiverges after approximately 20% of a training epoch.\nWe found that to stabilizeChameleon-7Bby controlling norm growth, it was necessary to introduce dropout\nafter the attention and feed-forward layers, in addition to QK-norm (see Figure 5c). However, this recipe was\nnot enough to stabilitize,Chameleon-34B, which required an additional re-ordering of the norms. Specifically,\nwe use the strategy of normalization proposed in Liu et al. (2021), within the transformer block. The benefit\nof the Swin transformer normalization strategy is that it bounds the norm growth of the feedforward block,\nwhich can become additionally problematic given the multiplicate nature of the SwiGLU activation function.\nIfhrepresents the hidden vector at time-steptafter self-attention is applied to inputx,\nChameleon-34B:h=x+attention_norm(attention(x))\noutput=h+ffn_norm(feed_forward(h))\nLlama2:h=x+attention(attention_norm(x))\noutput=h+feed_forward(ffn_norm(h))\nThere was no difference in perplexity when training a model from scratch with and without the normalization\nre-ordering until the divergence of the LLaMa-2 parameterization. Additionally, we found that this type of\nnormalization did not work well in combination with dropout and therefore, we trainChameleon-34Bwithout\ndropout (Figure 6c). Furthermore, we retroactively found thatChameleon-7Bcan also be stably trained\nwithout dropout, when using norm-reordering, but QK-norm is essential in both cases. We plot training\ncurves for the first 600k steps for bothChameleon-7BandChameleon-34Bin Figure 6a.\nOptimizationOur training process uses the AdamW optimizer (Loshchilov and Hutter, 2017), withβ\n1\nset\nto 0.9 andβ\n2\nto 0.95, with anε= 10\n−5\n. We use a linear warm-up of 4000 steps with an exponential decay\nschedule of the learning rate to 0. Additionally, we apply a weight decay of 0.1 and global gradient clipping at\na threshold of 1.0. We use a dropout of 0.1 (Srivastava et al., 2014) forChameleon-7Bfor training stability,\nbut not forChameleon-34B(see Figure 5c and 6c).\nThe application of QK-Norm while helping the inner softmaxes within the Transformer does not solve the\nproblem of logit shift in the final softmax. Following Chowdhery et al. (2022); Wortsman et al. (2023),\nwe applyz-lossregularization. Specifically, we regularize the partition functionZof the softmax function\nσ(x)\ni\n=\ne\nx\ni\nZ\nwhereZ=\nP\ni\ne\nx\ni\nby adding10\n−5\nlog\n2\nZto our loss function.\nForChameleon-7B it was important to use both dropout andz-lossto achieve stability, whileChameleon-34B\nonly requiredz-loss(Figure 6c).\nChameleon-7B\nwas trained with a global batch size of2\n23\n(∼8M) tokens andChameleon-34Bwas trained\nwith a global batch size of3×2\n22\n(∼12M) tokens. We do 2.1 epochs over our full training dataset for a total\n7",
    "of 9.2 trillion tokens seen during training. We show the first 600k steps of training (55% forChameleon-7B\nand 80% forChameleon-34B) in Figure 6a.\nTable 1Summary of core architecture and optimization decisions made inChameleonin contrast to LLaMa-1 and\nLLaMa-2.\nModelParams   Context Length   GQA   TokensLREpochs   Dropout   Zloss   Qknorm\nLLaMa-17B2k×1.0T3.0×10\n−4\n1.00.00.0×\n33B2k×1.4T1.5×10\n−4\n1.00.00.0×\nLLaMa-27B4k×2.0T3.0×10\n−4\n1.00.00.0×\n34B4k✓2.0T1.5×10\n−4\n1.00.00.0×\nChameleon7B4k×4.4T1.0×10\n−4\n2.10.110\n−5\n✓\n34B4k✓4.4T1.0×10\n−4\n2.10.010\n−5\n✓\nPre-Training HardwareOur model pretraining was conducted on Meta’s Research Super Cluster (RSC) (Lee\nand Sengupta, 2022), and our alignment was done on other internal research clusters. NVIDIA A100 80\nGB GPUs power both environments. The primary distinction is the interconnect technology: RSC employs\nNVIDIA Quantum InfiniBand, whereas our research cluster utilizes Elastic Fabric. We report our GPU usage\nfor pre-training in Table 2.\nTable 2ChameleonModel Pre-Training Resource Usage\nChameleonConcurrent GPUs  GPU Hours\n7B1024856481\n34B30724282407\n2.4  Inference\nTo support alignment and evaluation, both automated and human, and to demonstrate the application-\nreadiness of our approach, we augment the inference strategy with respect to interleaved generation to improve\nthroughput and reduce latency.\nAutoregressive, mixed-modal generation introduces unique performance-related challenges at inference time.\nThese include:\n•Data-dependencies per-step— given that our decoding formulation changes depending on whether the\nmodel is generating images or text at a particular step, tokens must be inspected at each step (i.e.\ncopied from the GPU to the CPU in a blocking fashion) to guide control flow.\n•\nMasking for modality-constrained generation— to facilitate exclusive generation for a particular modality\n(e.g. image-only generation), tokens that do not fall in a particular modality space must be masked and\nignored when de-tokenizing.\n•Fixed-sized text units— unlike text-only generation, which is inherently variable-length, token-based\nimage generation produces fixed-size blocks of tokens corresponding to an image.\nGiven these unique challenges, we built a standalone inference pipeline based on PyTorch (Paszke et al., 2019)\nsupported with GPU kernels fromxformers(Lefaudeux et al., 2022).\nOur inference implementation supports streaming for both text and images. When generating in a streaming\nfashion, token-dependent conditional logic is needed at each generation step. Without streaming, however,\nblocks of image tokens can be generated in a fused fashion without conditional computation. In all cases,\ntoken masking removes branching on the GPU. Even in the non-streaming setting, however, while generating\ntext, each output token must be inspected for image-start tokens to condition image-specific decoding\naugmentations.\n8",
    "Table 3Supervised Fine-Tuning Dataset Statistics\nCategory# of Samples   # of Tokens   # of Images\nChameleon-SFT\nText1.6M940.0M-\nCode14.1K1.1M-\nVisual Chat15.6K19.4M16.7K\nImage Generation64.3K68.0M64.3K\nInterleaved Generation16.9K35.8M30.7K\nSafety95.3K38.6M1.6K\n3  Alignment\nWe follow recent work in using a light weight alignment stage based on supervised fine tuning on carefully\ncurated high quality datasets (Zhou et al., 2023). We include a range of different types of data, targeting\nboth exposing model capabilities and improving safety.\n3.1  Data\nWe separate our supervised fine-tuning (SFT) dataset into the following categories:Text,Code,Visual\nChat,Image Generation,Interleaved Text/Image Generation, andSafety. We include examples from each\ncategory from theChameleon-SFTdataset in Figure 7.\nWe inherit theTextSFT dataset from LLaMa-2 (Touvron et al., 2023) and theCodeSFT from CodeLLaMa\n(Roziere et al., 2023). For theImage GenerationSFT dataset, we curate highly aesthetic images by applying\nand filtering each image in our licensed data, with an aesthetic classifier from Schuhmann et al. (2022). We\nfirst select images rated as at least six from the aesthetic classifier and then select the top 64K images closest\nin size and aspect ratio to512×512(the native resolution of our image tokenizer).\nFor bothVisual ChatandInterleaved Text/Image GenerationSFT data, we focused on very high-quality\ndata collection using third-party vendors following a similar strategy recommended by Touvron et al. (2023);\nZhou et al. (2023). We do not include any Meta user data. We present our dataset’s statistics in Table 3.\nSafety DataWe include a collection of prompts that can potentially provoke the model to produce unsafe\ncontent, and match them with a refusal response (e.g. “I can’t help with that.”). These prompts cover a\nwide variety of sensitive topics, such as violence, controlled substances, privacy, and sexual content. Our\ncollection of safety tuning data includes examples from LLaMa-2-Chat (Touvron et al., 2023), synthetic\ntext-based examples generated with Rainbow Teaming (Samvelyan et al., 2024), image generation prompts\nmanually selected from Pick-A-Pic (Kirstain et al., 2023) for safety testing, examples for cyber security\nsafety (Roziere et al., 2023), as well as mixed-modal prompts collected internally through manual annotation\nand automatic expansion (Honovich et al., 2022). Collecting mixed-modal prompts is of particular importance,\nsince it addresses potential multi-modal attack vectors, which are outside the distribution of text-only and\ntext-to-image safety tuning datasets.\n3.2  Fine-Tuning Strategy\nData BalancingWe found that balancing modalities within the SFT stage is important for high quality\nalignment. Specifically during the SFT stage, if there is a severe imbalance between pairings of modalities (or\nwhen a specific modality should trigger), the model learns an unconditional prior of generating that modality\nwhich can either mute or over exaggerate the generation of a single modality.\nOptimizationOur supervised fine-tuning strategy incorporates a cosine learning rate schedule, starting at an\ninitial rate of 1e-5, combined with a weight decay set at 0.1. We maintain a batch size of 128, accommodating\nsequences up to 4096 tokens. During fine-tuning, each dataset instance comprises a paired prompt and its\ncorresponding answer. To improve efficiency, we pack as many prompts and answers as possible into each\n9",
    "Prompt:Can you write a poem using\nrhyming couplets?\nResponse:Sure, here’s a short poem\nusing rhyming couplets:\nThe sun sets in the sky,\nA beautiful sight to the eye.\nThe stars come out to play,\nA magical sight to behold.\nThe  wind  whispers  through  the\ntrees,\nA gentle breeze that brings ease.\nThe birds sing their sweet melodies,\nA soothing sound that calms the soul.\nThe world is full of wonder,\nA place of beauty and thunder.\nSo let us cherish every moment,\nAnd bask in the beauty all around us.\n(a)Text\nPrompt:Given a list of integers,\nfind the first number that ap-\npears at least twice.\nResponse:\ndef find_duplicate(my_list):\nseen = set()\nfor num in my_list:\nif num in seen:\nreturn num\nseen.add(num)\nreturn None\n(b)Code\nPrompt:Renaissance square of\nStepanakert\nResponse:\n(c)Image Generation\nPrompt:Which elements contribute to this flower\narrangement’s distinctiveness, and what sets its sur-\nroundings apart?\nResponse:The image features an autumnal-themed\nfloral arrangement in a classically designed vase.\nThe arrangement stands out with its striking com-\nbination of red maple leaves, purple flowers, and\npink-red roses. The vase’s rosettes give it an antique\ndesign. In the background, blurry green vegetation\nis visible, creating a contrast to the autumnal theme\nof the bouquet. The red maple leaves, both in the\narrangement and scattered around the vase, evoke\nautumn, while the green vegetation suggests a more\nsummer-like setting. The outdoor setting is bright\nand sunny, adding to the contrast between the ar-\nrangement and its settings.\n(d)Visual Chat\nGyumri is an urban municipal community and the\nsecond-largest city in Armenia, serving as the ad-\nministrative center of Shirak Province in the north-\nwestern part of the country.\nArchaeological excavations conducted throughout\nthe Soviet period have shown that the area of\nmodern-day Gyumri has been populated since at\nleast the third millennium BC.\n(e)Interleaved Text/Image Generation\nFigure 7Example alignment data for different categories.\nsequence, inserting a distinct token to delineate the end of a prompt and the beginning of an answer. We\nuse an autoregressive training objective, selectively masking the loss for the prompt tokens. This targeted\napproach allows us to optimize the model exclusively based on the answer tokens, which provides slight gains\noverall. We also apply a dropout of 0.05. Additionally, we maintain the same zloss that was used during\n10",
    "Advice: 10.2%\nHow-to: 12.5%\nHow do I properly clean my TV \nscreen? I used Windex and now \nthere are towel fibers and wipe \nmarks all over. Show me some \nreference photos.\nExplanation: 14.4%\nI've been studying \nclassical French art, \nand my favorite \nso far is his painting \nseen here: <img> \nCould you please \ngive me a few images of other \ncontemporary artworks that have \nthis same aesthetic?\nHypothetical: 5.6%\nWhat would the modern-day \nvehicle look like if oil had never \nbeen discovered?\nBrainstorming: 18.6%\nShow me a Middle Eastern alternative to \nthese dishes. <img1> <img2>\n\nReasoning: 2.1%\nIdentification: 9.3 %\nIs the below image a \nShetland Pony? If \nnot, what is it, and \ncan you show me a \nShetland Pony? \n<img>\nArticle: 3.1%\nWrite me an introduction to a story about \nknick-knacks, and finish the story by \nshifting the focus with an image.\nReport: 5.4%\nWho designed the church in the image below, \nand what's the name of the \nChurch? <img> Can you \nplease provide me with \nadditional photos of famous \nlandmarks designed \nby the same architect?\nStory: 3.9%\nCan you create and illustrate a short story \nfor children about an octopus that can't \nstop eating pizza?\nOther: 5.2%\nCreate a decal for my truck that features \nrunning horses as well as the TRD insignia. Use \nblack to gray gradients.\nComparison: 9.6%\nPlease tell me what the difference between \nthese two creatures is, and show me some \nmore examples. <img1> <img2>\nWhat does a meningitis rash look \nlike? What are the other \nsymptoms I should be on the \nlookout for?\nWhat is typically found at a construction site? \nShow me a construction site that has a crane.\nFigure 8Task categories and examples of prompts. Image attributions: Seguin (2010); Agriflanders (2009); Tuszyński\n(2015); Sokolov (2022).\npre-training. During supervised fine-tuning, images in the prompt are resized with border padding to ensure\nthat all the information is available in the image, whereas images in the answer are center-cropped to ensure\nvisually good image generation quality.\n4  Human Evaluations and Safety Testing\nChameleon\nhas significant new mixed modal understanding and generation abilities that cannot be measured\nwith existing benchmarks. In this section, we detail how we conduct human evaluations on large multi-modal\nlanguage models’responsesto a set of diversepromptsthat regular users may ask daily. We first introduce\nhow we collect the prompts and then describe our baselines and evaluation methods, along with the evaluation\nresults and analysis. A safety study is also included in this section.\n4.1  Prompts for Evaluation\nWe work with a third-party crowdsourcing vendor to collect a set of diverse and natural prompts from human\nannotators. Specifically, we ask annotators to creatively think about what they want a multi-modal model\nto generate for different real-life scenarios. For example, for the scenario of “imagine you are in a kitchen”,\nannotators may come up with prompts like “How to cook pasta?” or “How should I design the layout of my\nisland? Show me some examples.” The prompts can be text-only or text with some images, and the expected\nresponses should be mixed-modal, containing both text and images.\nAfter collecting an initial set of prompts, we ask three random annotators to evaluate whether the prompts\nare clear and whether they expect the responses to contain images. We use a majority vote to filter unclear\nprompts and prompts that don’t expect mixed-modal responses. In the end, our final evaluation set contains\n1,048 prompts: 441 (42.1%) are mixed-modal (i.e., containing both text and images), and the remaining 607\n(57.9%) are text-only.\nTo better understand the tasks users would like a multi-modal AI system to fulfill, we manually examine\n11",
    "FulfillsPartially fulfillsDoes not fulfill\nTask Fulfillment Rate\n0\n10\n20\n30\n40\n50\n60\n70\nPercentage (%)\nModel\nChameleon\nGemini+\nGPT-4V+\nGemini\nGPT-4V\n(a)The prompt task fulfillment rates.\n020406080100\nPercent (%)\nGPT-4V\nGemini\nGPT-4V+\nGemini+\n46.0\n53.5\n35.8\n41.5\n31.4\n31.2\n31.6\n34.5\n22.6\n15.3\n32.6\n24.0\nWinsTiesLoses\n(b)Chameleon vs. the baselines: Gemini+, GPT-4V+,\nGemini, GPT-4V.\nFigure 9Performance ofChameleonvs baselines, on mixed-modal understanding and generation on a set of diverse\nand natural prompts from human annotators.\nthe prompts and classify them into 12 categories. The description of these task categories\n1\n, as well as their\nexample prompts, can be found in Figure 8.\n4.2  Baselines and Evaluations\nWe compareChameleon34B with OpenAI GPT-4V and Google Gemini Pro by calling their APIs. While these\nmodels can take mixed-modal prompts as input, their responses are text-only. We create additional baselines\nby augmenting GPT-4V and Gemini responses with images to have even stronger baselines. Specifically, we\ninstruct these models to generate image captions by adding the following sentence at the end of each original\ninput prompt: “If the question requires an image to be generated, then generate an image caption instead\nand enclose the caption in a pair of⟨caption⟩ ⟨/caption⟩tags.” We then use OpenAI DALL-E 3 to generate\nimages conditioned on these captions and replace the captions in the original responses with those generated\nimages. We denote the enhanced responses as GPT-4V+ and Gemini+ in this section. Working with the same\nthird-party crowdsourcing vendor, we conduct two types of evaluations to measure the model performance:\nabsoluteandrelative.\n4.2.1  Absolute Evaluation\nFor absolute evaluations, the output of each model is judged separately by asking three different annotators\na set of questions regarding the relevance and quality of the responses. Below, we give detailed results and\nanalysis on the most critical question,whether the response fulfills the task described in the prompt.\nOn task fulfillment, we ask annotators whether the responsefulfills,partially fulfills, ordoes not fulfillthe\ntask described in the prompt. As shown in Figure 9a, much more ofChameleon’s responses are considered\nto have completely fulfilled the tasks: 55.2% forChameleonvs. 37.6% of Gemini+ and 44.7% of GPT-4V+.\nWhen judging the original responses of Gemini and GPT-4V, the annotators consider much fewer prompts to\nbe fully fulfilled: Gemini completely fulfills 17.6% of the tasks and GPT-4V 23.1%. We suspect that because\nall the prompts expect mixed-modal output, the text-only responses from Gemini and GPT-4V might be\nviewed as only partially completing the tasks by the annotators.\nThe task fulfillment rates in each category and in each input modality can be found in Appendix B. The\ntask categories thatChameleonperforms well includeBrainstorming,Comparison, andHypothetical, and the\n1\nWhile not instructed specifically, certain image understanding tasks that require identifying the text in an image, such as\nOCR (Optical character recognition), do not appear in our evaluation set of prompts.\n12",
    "categoriesChameleonneeds to improve includeIdentificationandReasoning. On the other hand, we don’t\nsee that the model performance differs a lot when comparing mixed-modality and text-only prompts, although\nChameleonseems to perform slightly better on text-only prompts, while Gemini+ and GPT-4V+ are slightly\nbetter on mixed-modal ones. Figure 2 shows an example ofChameleon’s response to a brainstorming prompt.\n4.2.2  Relative Evaluation\nFor relative evaluations, we directly compareChameleonwith each baseline model by presenting their\nresponses to the same prompt in random order and asking human annotators which response they prefer. The\noptions include thefirstresponse, thesecondresponse, andabout the same. Figure 9b showsChameleon’s\nwin rates\n2\nover the baselines. Compared with Gemini+,Chameleon’s responses are better in 41.5% of the\ncases, 34.5% are tie, and 24.0% are inferior. Annotators also think thatChameleon’s responses are slightly\nmore often better than GPT-4V+, with 35.8% win, 31.6% tie, and 32.6% loss. Overall,Chameleonhas win\nrates of 60.4% and 51.6% over Gemini+ and GPT-4V+, respectively. When compared with the original\nresponses from Gemini without the augmented images,Chameleon’s responses are considered better in 53.5%\nof the cases, 31.2% are tied, and 15.3% are inferior.Chameleon’s responses are also considered better than\nGPT-4V more frequently, with 46.0% win, 31.4% tie, and 22.6% loss.Chameleon’s win rates over Gemini\nand GPT-4V are 69.1% and 61.7%, respectively.\n4.3  Inter-annotator Agreement\nEvery question in our evaluation is answered by three different human annotators, and we take the majority\nvotes as the final answer. To understand the quality of the human annotators and whether the questions we\nasked are reasonably designed, we examine the level of agreement between different annotators.\nThe levels of agreement on each question in the absolute evaluation are shown in Figure 10.\n0\n500\n10001500200025003000\nCount\nContaining images\nImage quality\nImage relevance\nLanguage quality\nObjectionable content\nRelevance\nTask fulfillment\nAccuracy\nAgreement\nAll\nTwo\nNone\nFigure 10The inter-annotator agreement on the questions in the absolute evaluation.\nFor questions about simple, objective properties of the responses, we very rarely see three annotators disagree\nwith each other. For example, annotators have unanimous judgments on whether the model responses contain\nobjectionable content (e.g., hate speech); in this case, all models produce safe responses. For some questions,\nsuch as whether the response fulfills the task or whether the model interprets the prompt correctly, when one\n2\nThe win rate is calculated by adding 1 point for a win and 0.5 points for a tie.\n13",
    "annotator’s judgment differs from the other two’s, the decision is usually still close (e.g.,fulfillsvs.partially\nfulfills) rather than opposite (e.g.,fulfillsvs.does not fulfill).\n3\nTable 4The inter-annotator agreement on relative evaluations.\nAll 3 annotators agree   2 of 3 annotators agree   No Agreement\nChameleon vs. Gemini+    331 (31.5%)609 (58.1%)108 (10.3%)\nChameleon vs. GPT-4V+   371 (35.4%)579 (55.2%)98 (9.3%)\nChameleon vs. Gemini317 (30.2%)621 (59.3%)110 (10.5%)\nChameleon vs. GPT-4V300 (28.6%)611 (58.3%)137 (13.1%)\nFor the relative evaluation, Table 4 shows the numbers of cases where all three annotators agree, two annotators\nagree, and there is no agreement. For each model pair, we have a bit higher than 10% of the cases where there\nis no agreement among the three annotators (considered as a tie in our evaluation.) On about 28% to 35% of\nthe pairs, all annotators have unanimous judgments, and in about 55% to 60% of the pairs, one annotator\ndiffers from other two. This may be interpreted asChameleonperforming similarly to other baselines in\nmany cases, making the relative evaluation challenging.\n4\n4.4  Safety Testing\nWe crowdsource prompts that provoke the model to create unsafe content in predefined categories such as\nself-harm, violence and hate, and criminal planning. These prompts cover both text and mixed-modal inputs,\nas well as intents to produce unsafe text, images, or mixed-modal outputs. We generate the model’s response\nto each prompt, and ask annotators to label whether the response issafeorunsafewith respect to each\ncategory’s definition of safety; anunsureoption is also provided for borderline responses. Table 5 shows\nthat an overwhelming majority ofChameleon’s responses are considered safe, with only 78 (0.39%) unsafe\nresponses for the 7B model and 19 (0.095%) for the 30B model.\nWe also evaluate the model’s ability to withstand adversarial prompting in an interactive session.  For\nthat purpose, an internal red team probed the 30B model over 445 prompt-response interactions, including\nmulti-turn interactions. Table 5 shows that of those responses, 7 (1.6%) were considered unsafe and 20 (4.5%)\nwere labeled as unsure. While further safety tuning using RLHF/RLAIF has been shown to further harden\nthe model against jailbreaking and intentional malicious attacks, these results demonstrate that our current\nsafety tuning approach provides significant protection for reasonable, benign usage of this research artifact.\n4.5  Discussion\nCompared to Gemini and GPT-4V,Chameleonis very competitive when handling prompts that expect\ninterleaving, mixed-modal responses. The images generated byChameleonare usually relevant to the context,\nmaking the documents with interleaving text and images very appealing to users. However, readers should\nbe aware of the limitations of human evaluation. First, the prompts used in the evaluation came from\ncrowdsourcing instead of real users who interact with a model. While we certainly have a diverse set of\nprompts, the coverage may still be limited, given the size of the dataset. Second, partially because our\nprompts focus on the mixed-modal output, certain visual understanding tasks, such as OCR or Infographics\n(i.e., interpreting a given chart or plot), are naturally excluded from our evaluation. Finally, at this moment,\nthe APIs of existing multi-modal LLMs provide only textual responses. While we strengthen the baselines by\naugmenting their output with separately generated images, it is still preferred if we can compareChameleon\nto other native mixed-modal models.\n3\nFor the question of task fulfillment, the inter-rater reliability derived by Krippendorff’s Alpha (Krippendorff, 2018; Marzi\net al., 2024) is0.338; the 95% confidence interval is[0.319,0.356], based on bootstrap sampling of 1,000 iterations.\n4\nWhen comparingChameleonwith Gemini+ and GPT-4V+, the Krippendorff’s Alpha values are0.337 [0.293,0.378]and\n0.396 [0.353,0.435], respectively.\n14",
    "Table 5Safety testing on 20,000 crowdsourced prompts and 445 red team interactions provoking the model to produce\nunsafe content.\nDatasetParams   Safe   Unsafe   Unsure\nCrowdsourced\n7B99.2%   0.4%0.4%\n34B99.7%   0.1%0.2%\nRed Team34B93.9%   1.6%4.5%\n5  Benchmark Evaluations\nGiven the general capabilities ofChameleon, there is not a single model that we can directly evaluate against;\ntherefore, we evaluate against the best models in every category within our capabilities.\n5.1  Text\nWe evaluate the general text-only capabilities of our pre-trained (not SFT’d) model against other state-of-the-\nart text-only large language models. We follow the evaluation protocol outlined by Touvron et al. (2023).\nSpecifically we evaluate all models, using an in-house evaluation platform on the areas of commonsense\nreasoning, reading comprehension, math problems, and world knowledge. We report our results in Table 6.\nTable 6Comparison of overall performance on collective academic benchmarks against open-source foundational models.\n∗\nEvaluated using our framework/using API. For GSM8k/MATH, we report maj@1 unless mentioned otherwise.\n∗∗\nFrom Gemini et al. (2023).\nChameleonLlama-2MistralGemini\nPro\nGPT-\n4\n7B34B    7B   34B   70B   7B8x7B——\nCommonsense Reasoning and Reading Comprehension\nPIQA79.683.3   78.8   81.9   82.8   83.083.6   ——\nSIQA57.063.3   48.3   50.9   50.7   ————\nHellaSwag74.282.7   77.2   83.3   85.3   81.384.4   ——\n75.6\n10-shot\n85.1\n10-shot\n——87.1\n10-shot\n83.9\n10-shot\n86.7\n10-shot\n84.7\n10-shot\n95.3\n10-shot\nWinoGrande70.478.5   69.2   76.7   80.2   75.377.2   ——\nArc-E76.184.1   75.2   79.4   80.2   80.083.1   ——\nArc-C46.559.7   45.9   54.5   57.4   55.559.7   ——\nOBQA51.054.0   58.6   58.2   60.2   ————\nBoolQ81.486.0   77.4   83.7   85.0   84.7\n∗\n———\nMath and World Knowledge\nGSM8k41.6    61.4    14.6   42.2   56.852.1\nmaj@8\n74.4\nmaj@8\n86.5\nmaj@32\nCoT\n92.0\nSFT\nCoT\n50.9\nmaj@8\n77.0\nmaj@32\n——   ——75.1\n∗\nmaj@32\n——\nMATH\n11.5\nmaj@1\n22.5\nmaj@1\n2.5   6.24   13.513.1\nmaj@4\n28.4\nmaj@4\n32.652.9\n∗∗\n12.9\nmaj@4\n24.7\nmaj@4\n——   —————\nMMLU52.1    65.8    45.3   62.6   68.9    60.1    70.6    71.886.4\n•Commonsense Reasoning and Reading Comprehension:We report 0-shot performance on the following\nbenchmarks that measure commonsense reasoning and reading comprehension capabilities:PIQA(Bisk\net al., 2020),SIQA(Sap et al., 2019),HellaSwag(Zellers et al., 2019),WinoGrande(Sakaguchi et al.,\n2021),ARC-Easy(Clark et al., 2018),ARC-Challenge(Clark et al., 2018),OpenBookQA(Mihaylov\net al., 2018), andBoolQ(Clark et al., 2019). We score the prompt with each candidate answer and\ncompute accuracy using the candidate with the highest score. All baseline model performances except a\nfew are taken directly from the reported sources. We observe thatChameleon-7BandChameleon-34B\n15",
    "are competitive with the corresponding Llama-2 models, withChameleon-34Beven outperforming\nLlama-2 70B on5/8tasks and performing on par with Mixtral 8x7B.\n•MATH and World KnowledgeWe report 8-shot performance onGSM8K(Cobbe et al., 2021) i.e., grade\nschool math word problems and 4-shot performance on theMATH(Hendrycks et al., 2021) benchmark.\nWe report maj@N exact match accuracy for both benchmarks by sampling N generations from the model\n(greedy sampling for N=1) and choosing the answer via majority voting. Despite training for additional\nmodalities, bothChameleonmodels demonstrate strong math capabilities. OnGSM8k,Chameleon-7B\noutperforms the corresponding Llama-2 models, with performance comparable to Mistral 7B (50.9 vs\n52.1 maj@8). Furthermore,Chameleon-34Bcan outperform Llama2-70B on maj@1 (61.4 vs 56.8) and\nMixtral 8x7B on maj@32 (77.0 vs 75.1). Similarly, on MATH,Chameleon-7Boutperforms Llama-2\nand matches Mistral 7B on maj@4, whileChameleon-34Boutperforms Llama2-70B, approaching the\nperformance of Mixtral 8x7B on maj@4 (24.7 vs 28.4).\nWe also report performance on MMLU (Hendrycks et al., 2020), which measures world/in-domain\nknowledge and problem-solving abilities using 57 subjects, including elementary mathematics, US\nhistory, computer science, and law. BothChameleonmodels outperform their Llama-2 counterparts\nwithChameleon-34Bapproaching the performance of Mixtral 8x7B/Gemini-Pro (65.8 vs 70.6/71.8).\nOverall,Chameleonoutperforms LLaMa-2 across the board, with performance approaching Mistral 7B/Mixtral\n8x7B (Jiang et al., 2023, 2024) on some tasks. These gains are likely due to multiple factors. First, we do\ntwo epochs over the LLaMa-2 pre-training data, and in general use more compute for pretraining. Second,\nincluding code data significantly improves performance on text-only reasoning tasks. Lastly, having higher\nquality data in the last 20% of pre-training significantly improves performance.\n5.2  Image-To-Text\nWe next evaluateChameleonon the segment of tasks that requires text generation conditioned on an image,\nspecifically on image captioning and visual question-answering tasks, and present results ofChameleon-34B\nin Table 7. Together with our pre-trained model, we also present results with a model fine-tuned on all tasks\ntogether (Chameleon-34B-MultiTask), as well as models exclusively fine-tuned for the specific evaluation\ntasks (Chameleon-34B-SFT).\nWe evaluate against available open-source late-fusion models: specifically Flamingo 80B (Alayrac et al., 2022),\nIDEFICS 80B (Laurençon et al., 2023), and Llava-1.5 (Liu et al., 2023a), as well as recent closed-source\nmodels, such as Gemini (Gemini et al., 2023) and GPT4-V (OpenAI, 2023). We note that we did not take\nany special care when formatting the pre-training data to ensure that 0-shot inference can be effectively done.\nTherefore, we augment the input images or questions with the published prompts used by other models. This\nwas purposefully done to maintain the fidelity of the pre-training data.\n•Image Captioning:For image captioning evaluations we report CiDER (Vedantam et al., 2015) scores\non the Karpathy test split of MS-COCO (Lin et al., 2014), and the Karpathy test split of Flickr30k\n(Plummer et al., 2015) using thepycocoevalcap(Chen et al., 2020) package. ForChameleonmodels,\nwe restrict captions to30tokens. We evaluated GPT-4V and Gemini models using several prompts and\ngeneration lengths via their APIs and report the best performance that we were able to achieve.\nIn the open-source pre-trained category,Chameleon-34B(2-shot) outperforms the larger 80B models of\nboth Flamingo and IDEFICS on COCO with 32-shots, while matching their performance on Flickr30k.\nWith respect to fine-tuned/closed-source models, both multi-task and SFT variants ofChameleon-34B\noutperform all other models on COCO, while for Flickr30k, the SFT model outperforms other models\nwith the multitask model being a close competitor.\n•Visual Question Answering:For visual question answering (VQA) we report performance on the test-\ndev split of VQA-v2 (Goyal et al., 2017). For VQA-v2, the pre-trainedChameleon-34Bmodel with\n2-shots matches the 32-shot performance of the larger Flamingo and IDEFICS models, while for fine-\ntuned/closed models,Chameleon-34B-Multitask approaches the performance of IDEFICS-80B-Instruct\nand Gemini Pro, but trails larger models such as Flamingo-80B-FT, GPT-4V, and Gemini Ultra.\nLlava-1.5 outperformsChameleon-34Bon VQAv2 potentially owing to its additional fine-tuning on\n16",
    "Table 7Model Performances on Image-to-Text Capabilities.\n∗\nEvaluated using API.\nModelModel SizeCOCO   Flickr30k   VQAv2\nPre-trained\nFlamingo-80B80B113.8\n32-shot\n75.1\n4-shot\n67.6\n32-shot\nIDEFICS-80B80B\n116.6\n32-shot\n73.7\n4-shot\n65.9\n32-shot\nChameleon\nChameleon34B120.2\n2-shot\n74.7\n2-shot\n66.0\n2-shot\nChameleon-SFT34B\n140.8\n0-shot\n82.3\n2-shot\n—\nChameleon-MultiTask34B139.1\n2-shot\n76.2\n2-shot\n69.6\nFine-tuned\nFlamingo-80B-FT80B138.1   —82.0\nIDEFICS-80B-Instruct80B\n123.2\n32-shot\n78.4\n32-shot\n68.8\n32-shot\nClosed Source\n(finetuning\nstatus unknown)\nGPT-4V—78.5\n∗\n8-shot\n55.3\n∗\n8-shot\n77.2\nGemini Nano 2———67.5\nGemini Pro—99.8\n∗\n2-shot\n82.2\n∗\n4-shot\n71.2\nGemini Ultra———77.8\nconversations from GPT-4, ShareGPT (ShareGPT, 2023), GQA (Hudson and Manning, 2019), and\nregion-level VQA datasets, but significantly trails behind on the other tasks.\nIn general, we findChameleonis fairly competitive on both image captioning and VQA tasks. It rivals other\nmodels by using much fewer in-context training examples and with smaller model sizes, in both pre-trained\nand fine-tuned model evaluations.\n6  Related Work\nChameleon builds upon the lineage of works exploring token-based approaches for multimodal learning. The\nidea of using discrete tokens to represent continuous modalities like images was first explored in works like\nBEiT (Bao et al., 2021), which proposed a self-supervised vision representation learning method based on\ntokenized image patches. Aghajanyan et al. (2022) extended this idea to learning from mixed-modal documents\nthrough interleaved image and text tokens, allowing for joint reasoning over both modalities within a unified\narchitecture. CM3Leon (Yu et al., 2023) further scaled up this approach to autoregressive text-to-image\ngeneration, building on the initial proposal of token-based image generation in DALL-E (Ramesh et al., 2021).\nAs a fully token-based early-fusion model, Chameleon differs from late-fusion approaches like Flamingo\n(Alayrac et al., 2022) which encode images and text separately before combining them at a later stage.\nOther models like LLaVA (Liu et al., 2023a), IDEFICS (Laurençon et al., 2023), and VisualGPT (Chen\net al., 2022) also maintain separate image and text encoders. In contrast, Chameleon’s unified token space\nallows it to seamlessly reason over and generate interleaved image and text sequences, without the need for\nmodality-specific components. This early-fusion approach, however, comes with significant challenges in terms\nof representation learning and alignment, as discussed in Baltrušaitis et al. (2018).\nThe most similar model to Chameleon is Gemini (Gemini et al., 2023), which also uses an early-fusion\ntoken-based approach. However, a key difference is that Gemini uses separate image decoders, whereas\nChameleon is an end-to-end dense model without any routing components. This makes Chameleon a more\ngeneral-purpose model for both multimodal understanding and generation tasks, similar in spirit to the\nPerceiver (Jaegle et al., 2021) architecture which also aims for a unified model across modalities and tasks.\nIn summary, Chameleon builds on a rich history of work in multimodal learning and token-based architectures,\nwhile pushing the boundaries in terms of model scale and architecture design. By demonstrating strong\nperformance across a wide range of vision-language tasks and enabling new capabilities in mixed-modal\nreasoning and generation, Chameleon represents a significant step towards realizing the vision of general-\n17",
    "purpose multimodal foundation models.\n7  Conclusion\nIn this paper, we introducedChameleon, a new family of early-fusion token-based foundation models that\nset a new bar for multimodal machine learning. By learning a unified representation space over interleaved\nimage and text tokens,Chameleonis a single model that achieves strong performance across a wide range of\nvision-language benchmarks while enabling new mixed-modal reasoning and generation capabilities.\nThe key toChameleon’s success is its fully token-based architecture, which allows for seamless information\nintegration across modalities. By quantizing images into discrete tokens and training on mixed-modal data\nfrom scratch,Chameleonlearns to jointly reason over image and text in a way that is impossible with\nlate-fusion architectures or models that maintain separate encoders for each modality. At the same time,\nChameleonintroduces novel techniques for stable and scalable training of early-fusion models, addressing key\noptimization and architectural design challenges that have previously limited the scale of such approaches. On\ntasks such as image captioning and visual question answering,Chameleon-34Boutperforms models such as\nFlamingo and IDEFICS, while maintaining competitive performance on text-only benchmarks.Chameleon\nalso unlocks entirely new possibilities for multimodal interaction, as demonstrated by its strong performance\non our new benchmark for mixed-modal open-ended QA.\nAcknowledgements\nWe thank Naren Briar for her invaluable contribution to manually curating safety prompts, which were crucial\nfor our safety tuning efforts. We also thank Pierre Fernandez for his indispensable support with the Chameleon\nrelease, Shelly Sheynin for her work on the Chameleon image tokenizer, Puxin Xu and David for helping us\nwith datasets. Additionally, we thank Mitchell Wortsman for engaging in insightful discussions about stability\nin large-scale language models and Mike Lewis for general discussions and advice throughout the project. We\nthank Aaron Grattafiori, Firat Ozgenel, Divya Shah, Danny Livshits, Cristian Canton Ferrer, Saghar Hosseini,\nRamon Calderer, Joshua Saxe, Daniel Song and Manish Bhatt for their help with the safety and red teaming\nefforts.\nContributors\nWe attribute credit separated by bucket of work. Additionally,\n∗\nindicates joint first authors,\n†\nindicates key\ncontributors,\n‡\nindicates workstream leads, and\n♯\nindicates project leads.\nPre-Training:Srinivasan Iyer\n∗\n, Bernie Huang\n∗\n, Lili Yu\n†\n, Arun Babu\n†\n, Chunting Zhou\n†\n, Kushal Tirumala, Xi\nVictoria Lin, Hu Xu, Xian Li, Akshat Shrivastava, Omer Levy\n‡\n, Armen Aghajanyan\n∗‡\nAlignment and Safety:Ram Pasunuru\n∗\n, Andrew Cohen\n†\n, Aram H. Markosyan\n†\n, Koustuv Sinha\n†\n, Xiaoqing\nEllen Tan\n†\n, Ivan Evtimov, Ping Yu, Tianlu Wang, Olga Golovneva, Asli Celikyilmaz\n‡\nInference and Evaluation:Pedro Rodriguez\n†\n, Leonid Shamis\n†\n, Vasu Sharma\n†\n, Christine Jou, Karthik Padthe\n†\n,\nChing-Feng Yeh, Mingda Chen, Bapi Akula, Jacob Kahn\n‡\n, Daniel Li\n‡\n, Scott Yih\n‡\nOverall Project:Barlas Oguz, Morteza Behrooz, Benjamin Muller, Carleigh Wood, Mary Williamson, Ramya\nRaghavendra, Barbara Usher, William Ngan, Nikolay Bashlykov, Lukas Blecher, Sony Theakanath (Lead\nPM), Ammar Rizvi (Lead TPM), Gargi Ghosh\n♯\n, Luke Zettlemoyer\n♯\n18",
    "References\nArmen Aghajanyan, Bernie Huang, Candace Ross, Vladimir Karpukhin, Hu Xu, Naman Goyal, Dmytro Okhonko,\nMandar Joshi, Gargi Ghosh, Mike Lewis, et al. Cm3: A causal masked multimodal model of the internet.arXiv\npreprint arXiv:2201.07520, 2022.\nArmen Aghajanyan, Lili Yu, Alexis Conneau, Wei-Ning Hsu, Karen Hambardzumyan, Susan Zhang, Stephen Roller,\nNaman Goyal, Omer Levy, and Luke Zettlemoyer. Scaling laws for generative mixed-modal language models.arXiv\npreprint arXiv:2301.03728, 2023.\nAgriflanders.   Miniatuurpaardjes prijskamp - Agriflanders 2009,  2009.https://en.wikipedia.org/wiki/File:\nMiniatuurpaardje.jpg. CC-BY-SA 2.0,https://creativecommons.org/licenses/by/2.0/deed.en.\nJean-Baptiste Alayrac, Jeff Donahue, Pauline Luc, Antoine Miech, Iain Barr, Yana Hasson, Karel Lenc, Arthur Mensch,\nKatherine Millican, Malcolm Reynolds, et al. Flamingo: a visual language model for few-shot learning.Advances in\nNeural Information Processing Systems, 35:23716–23736, 2022.\nTadas Baltrušaitis, Chaitanya Ahuja, and Louis-Philippe Morency. Multimodal machine learning: A survey and\ntaxonomy.IEEE transactions on pattern analysis and machine intelligence, 41(2):423–443, 2018.\nHangbo Bao, Li Dong, Songhao Piao, and Furu Wei. Beit: Bert pre-training of image transformers.arXiv preprint\narXiv:2106.08254, 2021.\nJames Betker, Gabriel Goh, Li Jing, Tim Brooks, Jianfeng Wang, Linjie Li, Long Ouyang, Juntang Zhuang, Joyce\nLee, Yufei Guo, et al. Improving image generation with better captions.Computer Science. https://cdn. openai.\ncom/papers/dall-e-3. pdf, 2(3):8, 2023.\nYonatan Bisk, Rowan Zellers, Jianfeng Gao, Yejin Choi, et al. Piqa: Reasoning about physical commonsense in natural\nlanguage. InProceedings of the AAAI conference on artificial intelligence, pages 7432–7439, 2020.\nJun Chen, Han Guo, Kai Yi, Boyang Li, and Mohamed Elhoseiny. Visualgpt: Data-efficient adaptation of pretrained\nlanguage models for image captioning. InProceedings of the IEEE/CVF Conference on Computer Vision and\nPattern Recognition, pages 18030–18040, 2022.\nXinlei Chen, Hao Fang, Tsung-Yi Lin, and Ramakrishna Vedantam.https://github.com/salaniz/pycocoevalcap, 2020.\nAakanksha Chowdhery, Sharan Narang, Jacob Devlin, Maarten Bosma, Gaurav Mishra, Adam Roberts, Paul Barham,\nHyung Won Chung, Charles Sutton, Sebastian Gehrmann, et al. PaLM: Scaling language modeling with pathways.\narXiv preprint arXiv:2204.02311, 2022.\nChristopher Clark, Kenton Lee, Ming-Wei Chang, Tom Kwiatkowski, Michael Collins, and Kristina Toutanova. Boolq:\nExploring the surprising difficulty of natural yes/no questions.arXiv preprint arXiv:1905.10044, 2019.\nPeter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, and Oyvind Tafjord.\nThink you have solved question answering? try arc, the ai2 reasoning challenge.arXiv preprint arXiv:1803.05457,\n2018.\nKarl Cobbe, Vineet Kosaraju, Mohammad Bavarian, Mark Chen, Heewoo Jun, Lukasz Kaiser, Matthias Plappert,\nJerry Tworek, Jacob Hilton, Reiichiro Nakano, et al. Training verifiers to solve math word problems.arXiv preprint\narXiv:2110.14168, 2021.\nMostafa Dehghani, Josip Djolonga, Basil Mustafa, Piotr Padlewski, Jonathan Heek, Justin Gilmer, Andreas Peter\nSteiner, Mathilde Caron, Robert Geirhos, Ibrahim Alabdulmohsin, et al. Scaling vision transformers to 22 billion\nparameters. InInternational Conference on Machine Learning, pages 7480–7512. PMLR, 2023.\nOran Gafni, Adam Polyak, Oron Ashual, Shelly Sheynin, Devi Parikh, and Yaniv Taigman. Make-a-scene: Scene-based\ntext-to-image generation with human priors.arXiv preprint arXiv:2203.13131, 2022.\nGemini, Rohan Anil, Sebastian Borgeaud, Yonghui Wu, Jean-Baptiste Alayrac, Jiahui Yu, Radu Soricut, Johan\nSchalkwyk, Andrew M Dai, Anja Hauth, et al. Gemini: a family of highly capable multimodal models.arXiv\npreprint arXiv:2312.11805, 2023.\nYash Goyal, Tejas Khot, Douglas Summers-Stay, Dhruv Batra, and Devi Parikh. Making the V in VQA matter:\nElevating the role of image understanding in visual question answering. InProceedings of the IEEE conference on\ncomputer vision and pattern recognition, pages 6904–6913, 2017.\n19",
    "Dan Hendrycks, Collin Burns, Steven Basart, Andy Zou, Mantas Mazeika, Dawn Song, and Jacob Steinhardt. Measuring\nmassive multitask language understanding. InInternational Conference on Learning Representations, 2020.\nDan Hendrycks, Collin Burns, Saurav Kadavath, Akul Arora, Steven Basart, Eric Tang, Dawn Song, and Jacob\nSteinhardt. Measuring mathematical problem solving with the math dataset.arXiv preprint arXiv:2103.03874, 2021.\nOr Honovich, Thomas Scialom, Omer Levy, and Timo Schick. Unnatural instructions: Tuning language models with\n(almost) no human labor, 2022.\nDrew A Hudson and Christopher D Manning. Gqa: A new dataset for real-world visual reasoning and compositional\nquestion answering. InProceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages\n6700–6709, 2019.\nAndrew Jaegle, Sebastian Borgeaud, Jean-Baptiste Alayrac, Carl Doersch, Catalin Ionescu, David Ding, Skanda\nKoppula, Daniel Zoran, Andrew Brock, Evan Shelhamer, et al. Perceiver io: A general architecture for structured\ninputs & outputs.arXiv preprint arXiv:2107.14795, 2021.\nAlbert Q Jiang, Alexandre Sablayrolles, Arthur Mensch, Chris Bamford, Devendra Singh Chaplot, Diego de las\nCasas, Florian Bressand, Gianna Lengyel, Guillaume Lample, Lucile Saulnier, et al. Mistral 7b.arXiv preprint\narXiv:2310.06825, 2023.\nAlbert Q Jiang, Alexandre Sablayrolles, Antoine Roux, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh\nChaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, et al. Mixtral of experts.arXiv preprint\narXiv:2401.04088, 2024.\nYang Jin, Kun Xu, Liwei Chen, Chao Liao, Jianchao Tan, Bin Chen, Chenyi Lei, An Liu, Chengru Song, Xiaoqiang Lei,\net al. Unified language-vision pretraining with dynamic discrete visual tokenization.arXiv preprint arXiv:2309.04669,\n2023.\nYuval Kirstain, Adam Polyak, Uriel Singer, Shahbuland Matiana, Joe Penna, and Omer Levy. Pick-a-pic: An open\ndataset of user preferences for text-to-image generation, 2023.\nKlaus Krippendorff.Content analysis: An introduction to its methodology. Sage publications, 2018.\nTaku Kudo and John Richardson. Sentencepiece: A simple and language independent subword tokenizer and detokenizer\nfor neural text processing.arXiv preprint arXiv:1808.06226, 2018.\nHugo Laurençon, Lucile Saulnier, Léo Tronchon, Stas Bekman, Amanpreet Singh, Anton Lozhkov, Thomas Wang,\nSiddharth Karamcheti, Alexander M Rush, Douwe Kiela, et al. Obelisc: An open web-scale filtered dataset of\ninterleaved image-text documents.arXiv preprint arXiv:2306.16527, 2023.\nKevin Lee and Shubho Sengupta. Introducing the ai research supercluster — meta’s cutting-edge ai supercomputer for\nai research.https://ai.facebook.com/blog/ai-rsc/, 2022.\nBenjamin Lefaudeux, Francisco Massa, Diana Liskovich, Wenhan Xiong, Vittorio Caggiano, Sean Naren, Min Xu, Jieru\nHu, Marta Tintore, Susan Zhang, Patrick Labatut, Daniel Haziza, Luca Wehrstedt, Jeremy Reizenstein, and Grigory\nSizov. xformers: A modular and hackable transformer modelling library.https://github.com/facebookresearch/\nxformers, 2022.\nTsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Dollár, and C Lawrence\nZitnick. Microsoft coco: Common objects in context. InEuropean conference on computer vision, pages 740–755.\nSpringer, 2014.\nHaotian Liu, Chunyuan Li, Yuheng Li, and Yong Jae Lee. Improved baselines with visual instruction tuning.arXiv\npreprint arXiv:2310.03744, 2023a.\nHaotian Liu, Chunyuan Li, Qingyang Wu, and Yong Jae Lee. Visual instruction tuning.arXiv preprint arXiv:2304.08485,\n2023b.\nZe Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, and Baining Guo. Swin transformer:\nHierarchical vision transformer using shifted windows. InProceedings of the IEEE/CVF international conference on\ncomputer vision, pages 10012–10022, 2021.\nIlya Loshchilov and Frank Hutter. Decoupled weight decay regularization.arXiv preprint arXiv:1711.05101, 2017.\nGiacomo Marzi, Marco Balzano, and Davide Marchiori. K-alpha calculator–krippendorff’s alpha calculator: A user-\nfriendly tool for computing krippendorff’s alpha inter-rater reliability coefficient.MethodsX, 12:102545, 2024. ISSN\n20",
    "2215-0161. doi: https://doi.org/10.1016/j.mex.2023.102545.https://www.sciencedirect.com/science/article/pii/\nS2215016123005411.\nTodor Mihaylov, Peter Clark, Tushar Khot, and Ashish Sabharwal. Can a suit of armor conduct electricity? a new\ndataset for open book question answering.arXiv preprint arXiv:1809.02789, 2018.\nOpenAI. GPTV System Card.https://cdn.openai.com/papers/GPTV_System_Card.pdf, 2023.\nAdam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan, Trevor Killeen, Zeming\nLin, Natalia Gimelshein, Luca Antiga, et al. PyTorch: An imperative style, high-performance deep learning library.\nInNeurIPS, 2019.\nBryan A Plummer, Liwei Wang, Chris M Cervantes, Juan C Caicedo, Julia Hockenmaier, and Svetlana Lazebnik.\nFlickr30k entities: Collecting region-to-phrase correspondences for richer image-to-sentence models. InProceedings\nof the IEEE international conference on computer vision, pages 2641–2649, 2015.\nAditya Ramesh, Mikhail Pavlov, Gabriel Goh, Scott Gray, Chelsea Voss, Alec Radford, Mark Chen, and Ilya Sutskever.\nZero-shot text-to-image generation.arXiv preprint arXiv:2102.12092, 2021.\nAditya Ramesh, Prafulla Dhariwal, Alex Nichol, Casey Chu, and Mark Chen. Hierarchical text-conditional image\ngeneration with clip latents.arXiv preprint arXiv:2204.06125, 2022.\nBaptiste Roziere, Jonas Gehring, Fabian Gloeckle, Sten Sootla, Itai Gat, Xiaoqing Ellen Tan, Yossi Adi, Jingyu Liu,\nTal Remez, Jérémy Rapin, et al. Code llama: Open foundation models for code.arXiv preprint arXiv:2308.12950,\n2023.\nKeisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavatula, and Yejin Choi. Winogrande: An adversarial winograd\nschema challenge at scale.Communications of the ACM, 64(9):99–106, 2021.\nMikayel Samvelyan, Sharath Chandra Raparthy, Andrei Lupu, Eric Hambro, Aram H. Markosyan, Manish Bhatt,\nYuning Mao, Minqi Jiang, Jack Parker-Holder, Jakob Foerster, Tim Rocktäschel, and Roberta Raileanu. Rainbow\nteaming: Open-ended generation of diverse adversarial prompts, 2024.\nMaarten Sap, Hannah Rashkin, Derek Chen, Ronan LeBras, and Yejin Choi. Socialiqa: Commonsense reasoning about\nsocial interactions.arXiv preprint arXiv:1904.09728, 2019.\nRylan Schaeffer. Pretraining on the test set is all you need.arXiv preprint arXiv:2309.08632, 2023.\nChristoph Schuhmann, Romain Beaumont, Richard Vencu, Cade Gordon, Ross Wightman, Mehdi Cherti, Theo\nCoombes, Aarush Katta, Clayton Mullis, Mitchell Wortsman, et al. Laion-5b: An open large-scale dataset for\ntraining next generation image-text models.arXiv preprint arXiv:2210.08402, 2022.\nGeorges Seguin. Mille-feuille, 2010.https://en.wikipedia.org/wiki/File:Mille-feuille_20100916.jpg. CC-BY-SA 3.0,\nhttps://creativecommons.org/licenses/by-sa/3.0/deed.en.\nRico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare words with subword units. In\nACL, Berlin, Germany, 2016.https://aclanthology.org/P16-1162.\nShareGPT. GPTV System Card.https://sharegpt.com/, 2023.\nNoam Shazeer. Glu variants improve transformer.arXiv preprint arXiv:2002.05202, 2020.\nMaksim Sokolov. Sagrada Familia July 2022, 2022.https://en.wikipedia.org/wiki/File:Sagrada_Familia_%28July_\n2022%29_08.jpg. CC-BY-SA-4.0,https://creativecommons.org/licenses/by-sa/4.0/deed.en.\nNitish Srivastava, Geoffrey Hinton, Alex Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdinov. Dropout: a simple\nway to prevent neural networks from overfitting.The journal of machine learning research, 15(1):1929–1958, 2014.\nJianlin Su, Yu Lu, Shengfeng Pan, Ahmed Murtadha, Bo Wen, and Yunfeng Liu. Roformer: Enhanced transformer\nwith rotary position embedding. arxiv e-prints, art.arXiv preprint arXiv:2104.09864, 2021.\nHugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov,\nSoumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models.\narXiv preprint arXiv:2307.09288, 2023.\nJarek Tuszyński. American toad (Bufo americanus) found in Fairfax, Virginia, 2015.https://en.wikipedia.org/wiki/File:\nMiniatuurpaardje.jpg. CC-BY-SA-4.0,https://creativecommons.org/licenses/by-sa/4.0/deed.en.\nRamakrishna Vedantam, C Lawrence Zitnick, and Devi Parikh. Cider: Consensus-based image description evaluation.\nInProceedings of the IEEE conference on computer vision and pattern recognition, pages 4566–4575, 2015.\n21",
    "Mitchell Wortsman, Peter J Liu, Lechao Xiao, Katie Everett, Alex Alemi, Ben Adlam, John D Co-Reyes, Izzeddin\nGur, Abhishek Kumar, Roman Novak, et al. Small-scale proxies for large-scale transformer training instabilities.\narXiv preprint arXiv:2309.14322, 2023.\nLili Yu, Bowen Shi, Ramakanth Pasunuru, Benjamin Muller, Olga Golovneva, Tianlu Wang, Arun Babu, Binh Tang,\nBrian Karrer, Shelly Sheynin, et al. Scaling autoregressive multi-modal models: Pretraining and instruction tuning.\narXiv preprint arXiv:2309.02591, 2023.\nRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, and Yejin Choi. Hellaswag: Can a machine really finish your\nsentence?arXiv preprint arXiv:1905.07830, 2019.\nBiao Zhang and Rico Sennrich. Root mean square layer normalization.Advances in Neural Information Processing\nSystems, 32, 2019.\nChunting Zhou, Pengfei Liu, Puxin Xu, Srini Iyer, Jiao Sun, Yuning Mao, Xuezhe Ma, Avia Efrat, Ping Yu, Lili Yu,\net al. Lima: Less is more for alignment.arXiv preprint arXiv:2305.11206, 2023.\n22",
    "Appendix\nA  Samples\nPrompt:My mom just adopted a dog called a mountain cur. I thought I\nknew a lot about dogs but I have never heard of this breed. Can you give\nme some basic information as well as show me a few pictures of what they\nlook like?\nResponse:Sure!   Mountain Cur dogs are a type of hunting dog\nthat originated in the Appalachian Mountains.  They are known for\ntheir intelligence, loyalty, and strong prey drive.  They are typically\nmedium-sized dogs, with a muscular build and a short, easy-to-maintain\ncoat that comes in a variety of colors including black, brown, tan, red,\nand white. Here is an image of a black and white mountain cur dog:<img>\nThey have a long muzzle, floppy ears, and a bushy tail. They are generally\nfriendly and outgoing, but can be wary of strangers if not socialized\nproperly. They are highly energetic dogs that require regular exercise and\nmental stimulation to prevent boredom and destructive behavior.\nHere is another image of a mountain cur dog in the forest:<img>\nMountain Cur dogs are often used for hunting, particularly for small game\nsuch as squirrels, raccoons, and rabbits. They are also popular family\npets due to their loyal and affectionate nature. However, they do require\nregular exercise and training to ensure they remain happy and healthy.\nWith proper care and attention, Mountain Cur dogs can make wonderful\ncompanions for active families or individuals who enjoy the outdoors.\nPrompt:What color is a polar bear’s fur? Show me a photograph of the\npolar bear in the wild.\nResponse:Polar bears have white fur, which helps them blend in with\ntheir snowy and icy surroundings.  This camouflage allows them to\nhunt more effectively, as they can sneak up on their prey without being\ndetected. Additionally, the white fur reflects sunlight, keeping the polar\nbear cool in the harsh Arctic environment. Here is an image of a polar\nbear in the wild:<img>\n23",
    "Prompt: <img>My plant looks like this... Is this a problem? If so, how do I fix it?\nResponse:The image you provided shows a pothos plant with yellowing leaves,\nwhich can be caused by a variety of factors, including overwatering, underwater-\ning, lack of nutrients, too much direct sunlight, or pests. Here are some steps\nyou can take to troubleshoot and potentially fix the issue:\n•\nCheck the soil: Pothos plants prefer well-draining soil that is neither too\nwet nor too dry. If the soil feels soggy or waterlogged, stop watering for a\nwhile. Conversely, if the soil feels dry to the touch, it’s time to water.\n•Adjust watering: Overwatering is a common cause of yellowing leaves on\npothos plants. Reduce the frequency of watering and allow the soil to dry\nout slightly between waterings.\n•Provide adequate light: Pothos plants prefer bright, indirect light but can tolerate low light\nconditions. If your plant is not getting enough light, move it to a brighter location.\n•\nFertilize: Pothos plants benefit from regular fertilization. Use a balanced, water-soluble fertilizer\nand follow the instructions on the label.\n•Prune: Yellow leaves can be removed to improve the appearance of the plant. Cut back any yellow\nleaves to the nearest healthy stem using clean pruning shears.\n•Check for pests: Inspect the plant for pests such as mealybugs, spider mites, or scale. If present,\ntreat the plant with insecticidal soap or neem oil according to the product’s instructions.\n•\nRepot: If the plant is pot-bound (meaning the roots have filled the container), consider repotting it\nin a larger container with fresh, well-draining soil.\nBy following these steps, you may be able to identify and address the underlying cause of the yellowing\nleaves on your pothos plant.\nB  Additional Information of Human Evaluations\nTable 8Descriptions of the prompt task categories.\nTask categoryDescription\nHow-toInstructions on how to complete a task or accomplish a goal.\nAdviceInformed problem-solving.\nExplanationA more detailed exposition of a topic, e.g., how batteries work, why animals hibernate, or\nhow to apply rules of composition to photography.\nHypotheticalResponses to imaginative, “what if” questions.\nBrainstormingGenerating ideas, options, or possibilities.\nReasoning\nDeducing the answer to a question using commonsense or information provided in the prompt.\nComparisonDescribes the similarities / differences between multiple things, like products, places, foods,\netc.\nIdentificationIdentifying objects in the input image.\nArticleAsking for the creation of content such as blog posts.\nReportGenerating a summary of real events.\nStoryCreating fictional narratives.\nOtherOther miscellaneous requests.\nFor the twelve task categories of the prompts we collected for human evaluation, a short description of each\ncategory can be found in Table 8.\nThe task fulfillment rates, broken down by each task category and modality are shown in Table 9 and Table 10.\nChameleon’s win rates, broken down by task category and modality, are shown in Table 11, Table 12, Table 13\nand Table 14.\n24",
    "Table 9Task fulfillment breakdown.\nChameleonGemini+GPT-4V+\nTask TypeFulfillsPartially\nfulfills\nDoes not\nfulfill\nFulfills\nPartially\nfulfills\nDoes not\nfulfill\nFulfills\nPartially\nfulfills\nDoes not\nfulfill\nAdvice69.2%    26.2%4.7%    42.1%    56.1%1.9%    43.9%    48.6%7.5%\nArticle59.4%    37.5%3.1%    40.6%    53.1%6.3%    62.5%    37.5%0.0%\nBrainstorming57.9%    36.4%5.6%    33.3%    61.5%5.1%    47.7%    47.2%5.1%\nComparison60.4%    34.7%5.0%    47.5%    46.5%5.9%    43.6%    44.6%11.9%\nExplanation53.0%    37.7%9.3%    33.8%    61.6%4.6%    41.7%    50.3%7.9%\nHow-to52.7%    40.5%6.9%    43.5%    52.7%3.8%    48.1%    41.2%10.7%\nHypothetical55.9%    39.0%5.1%    39.0%    47.5%13.6%    42.4%    44.1%13.6%\nIdentification55.7%    33.0%11.3%    33.0%    66.0%1.0%    35.1%    55.7%9.3%\nOther41.8%    40.0%18.2%    38.2%    41.8%20.0%    50.9%    40.0%9.1%\nReasoning50.0%    13.6%36.4%    27.3%    59.1%13.6%    31.8%    54.5%13.6%\nReport49.1%    40.4%10.5%    29.8%    61.4%8.8%    38.6%    47.4%14.0%\nStory31.7%    63.4%4.9%    39.0%    56.1%4.9%    53.7%    43.9%2.4%\nGeminiGPT-4V\nTask TypeFulfillsPartially\nfulfills\nDoes not\nfulfill\nFulfillsPartially\nfulfills\nDoes not\nfulfill\nAdvice21.5%    70.1%8.4%    23.4%    75.7%0.9%\nArticle12.5%    84.4%3.1%9.4%    90.6%0.0%\nBrainstorming18.5%    71.8%9.7%    27.2%    66.7%6.2%\nComparison14.9%    76.2%8.9%    19.8%    72.3%7.9%\nExplanation15.2%    78.1%6.6%    19.9%    77.5%2.6%\nHow-to19.8%    74.0%6.1%    31.3%    67.2%1.5%\nHypothetical30.5%    49.2%20.3%    32.2%    61.0%6.8%\nIdentification18.6%    75.3%6.2%    22.7%    68.0%9.3%\nOther14.5%    60.0%25.5%    18.2%    67.3%14.5%\nReasoning9.1%    77.3%13.6%    13.6%    81.8%4.5%\nReport12.3%    77.2%10.5%    22.8%    68.4%8.8%\nStory9.8%    82.9%7.3%7.3%    90.2%2.4%\nTable 10Modality fulfillment breakdown.\nChameleonGemini+GPT-4V+\nFulfillsPartially\nfulfills\nDoes not\nfulfill\nFulfillsPartially\nfulfills\nDoes not\nfulfill\nFulfillsPartially\nfulfills\nDoes not\nfulfill\nMixed-modality55.3%    36.7%7.9%    39.2%    57.8%2.9%    42.6%    52.4%5.0%\nText-only57.7%    38.4%4.0%    36.4%    55.5%8.1%    46.1%    42.7%11.2%\nGeminiGPT-4V\nFulfillsPartially\nfulfills\nDoes not\nfulfill\nFulfillsPartially\nfulfills\nDoes not\nfulfill\nMixed-modality19.7%    76.0%4.3%    24.3%    72.6%3.2%\nText-only18.3%    72.7%9.1%    23.6%    72.0%4.4%\n25",
    "Table 11Complete Win Rates:Chameleonvs. Gemini+.\nWinsTiesLoses    Win rate\nOverall43536225158.8%\nAdvice48352461.2%\nArticle1414465.6%\nBrainstorming101603467.2%\nComparison41382259.4%\nExplanation65464058.3%\nHow-to53512759.9%\nHypothetical17241849.2%\nIdentification39332557.2%\nOther24171459.1%\nReasoning78750.0%\nReport16221947.4%\nStory10141741.5%\nMixed-modal Prompts19414510260.4%\nText-only Prompts24121714957.6%\nTable 12Complete Win Rates:Chameleonvs. GPT-4V+.\nWinsTies   Loses   Win rate\nOverall37533134251.6%\nAdvice54272663.1%\nArticle9111245.3%\nBrainstorming78576054.6%\nComparison35353152.0%\nExplanation53564253.6%\nHow-to49463655.0%\nHypothetical23191755.1%\nIdentification31264045.4%\nOther16132640.9%\nReasoning115661.4%\nReport16212046.5%\nStory0152618.3%\nMixed-modal Prompts14911917347.3%\nText-only Prompts22621216954.7%\n26",
    "Table 13Complete Win Rates:Chameleonvs. Gemini.\nWinsTies   Loses   Win rate\nOverall56132716069.1%\nAdvice59252366.8%\nArticle1811373.4%\nBrainstorming133422079.0%\nComparison54291867.8%\nExplanation78512268.5%\nHow-to65422465.6%\nHypothetical2726667.8%\nIdentification45302261.9%\nOther2723570.0%\nReasoning116563.6%\nReport3021671.1%\nStory1421659.8%\nMixed-modal Prompts2401237868.4%\nText-only Prompts3212048269.7%\nTable 14Complete Win Rates:Chameleonvs. GPT-4V.\nWinsTies   Loses   Win rate\nOverall48232923761.7%\nAdvice53302463.6%\nArticle189570.3%\nBrainstorming107533568.5%\nComparison44352260.9%\nExplanation75364061.6%\nHow-to51493157.6%\nHypothetical20251455.1%\nIdentification40292856.2%\nOther20221356.4%\nReasoning106659.1%\nReport25181459.6%\nStory1917567.1%\nMixed-modal Prompts19112512557.5%\nText-only Prompts29120411264.7%\n27"
  ]
}